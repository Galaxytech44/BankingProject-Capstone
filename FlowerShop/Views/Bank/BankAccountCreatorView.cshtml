@{ var users = Model; }
@{ //gets the selectedUserId
    var selectedUserId = ViewBag.SelectedUserId as int?; var selectedAccountId = ViewBag.SelectedAccountId as int?; var selectedAccount = ViewBag.SelectedAccount as FlowerShop.Models.BankEntityFramework.Account; }
@model IEnumerable<FlowerShop.Models.BankEntityFramework.User>
@using System.Globalization
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bank Account Creator View</title>
    <link rel="stylesheet" href="../../Content/style.css">
</head>
<body>
    <div class="container">
        <header></header>
        <div class="agrid-container">
            <div class="nav-buttons">
                <a href="/Bank/BankHomePage">Account Holder Creator Window</a>
                <a href="/Bank/BankDataView">Account Holder Viewer Window</a>
                <a href="/Bank/BankAccountCreatorView">Account Creator Window</a>
                <a href="/Bank/TellerView">Teller Window</a>
            </div>
            <div class="container">
                <h2>Create New Bank Account</h2>
                <form asp-action="BankAccountCreatorView" method="post">
                    <table style="width:100%;">
                        <tr>
                            <td id="accountIdField" style="display:none;">
                                <label for="account_id">Account ID:</label>
                                <input style="width:50%;" type="number" name="account_id" id="account_id" value="" min="1" />
                            </td>
                            <td>
                                <label for="userid">User ID:</label>
                                <input style="width:50%;" type="number" name="userid" id="userid" required />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="account_name">Account Name:</label>
                                <input style="width:50%;" type="text" name="account_name" id="account_name" required />
                            </td>
                            <td>
                                <label for="account_desc">Account Description:</label>
                                <input style="width:50%;" type="text" name="account_desc" id="account_desc" required />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="balance">Balance:</label>
                                <input style="width:50%;" type="number" step="0.01" name="balance" id="balance" required />
                            </td>
                            <td>
                                <label for="interest_rate">Interest Rate:</label>
                                <input style="width:50%;" type="number" step="0.0001" name="interest_rate" id="interest_rate" required />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="account_type">Account Type:</label>
                                <select style="width:50%;" name="account_type" id="account_type" required>
                                    <option value="SAVINGS">Savings</option>
                                    <option value="CHECKING">Checking</option>
                                </select>
                            </td>
                            <td colspan="2" style="text-align:center;">
                                <button type="submit">Submit</button>
                                <button type="button" id="deleteAccountBtn">Delete</button>
                                <button type="button" id="toggleMode">Edit Account</button>
                            </td>
                        </tr>
                    </table>
                </form>
            </div>
            <div class="container">
                <form method="get" action="/Bank/BankAccountCreatorView">
                    <select id="searchFilter" name="searchFilter">
                        <option value="">All Fields</option>
                        <option value="UserID">User ID</option>
                        <option value="FirstName">First Name</option>
                        <option value="LastName">Last Name</option>
                        <option value="DateOfBirth">Date of Birth</option>
                        <option value="AccountCreated">Account Created</option>
                        <option value="Email">Email</option>
                        <option value="Phone">Phone</option>
                        <option value="SSN">SSN</option>
                        <option value="Address">Address</option>
                        <option value="City">City</option>
                        <option value="State">State</option>
                        <option value="Zipcode">Zipcode</option>
                    </select>
                    <input type="text" id="searchText" name="searchText" placeholder="Search..." value="@Request.QueryString["searchText"]">
                    <button type="submit">Search</button>
                </form>
                @*checks to see if any user entrys exists*@
                @if (users != null && users.Any())
                {
    <div class="table-container">
        <table id="bankTable" border="1">
            <thead>
                <tr>
                    <th data-column="UserID">User ID</th>
                    <th data-column="FirstName">First Name</th>
                    <th data-column="LastName">Last Name</th>
                    <th data-column="DateOfBirth">Date of Birth</th>
                    <th data-column="AccountCreated">Account Created</th>
                    <th data-column="Email">Email</th>
                    <th data-column="Phone">Phone</th>
                    <th data-column="SSN">SSN</th>
                    <th data-column="Address">Address</th>
                    <th data-column="City">City</th>
                    <th data-column="State">State</th>
                    <th data-column="Zipcode">Zipcode</th>
                </tr>
            </thead>
            <tbody>
                @*goes through each user within the model users*@
                @foreach (var user in users)
                {
<tr>
    <td data-filter="UserID" class="user-id" style="cursor:pointer; color: blue; text-decoration: underline;"><a href="/Bank/BankAccountCreatorView?selectedUserId=@user.userid">@user.userid</a></td>
    <td data-filter="FirstName">@CultureInfo.CurrentCulture.TextInfo.ToTitleCase(user.first_name)</td>
    <td data-filter="LastName">@CultureInfo.CurrentCulture.TextInfo.ToTitleCase(user.last_name)</td>
    <td data-filter="DateOfBirth">@user.date_of_birth.ToString("MM/dd/yyyy")</td>
    <td data-filter="AccountCreated">@user.account_creation_date.ToString("MM/dd/yyyy")</td>
    <td data-filter="Email">@(user.ContactInfoes.FirstOrDefault()?.email_address ?? "N/A")</td>
    <td data-filter="Phone">@(user.ContactInfoes.FirstOrDefault()?.phone_number ?? "N/A")</td>
    <td data-filter="SSN">@(user.ContactInfoes.FirstOrDefault()?.social_security_number ?? "N/A")</td>
    <td data-filter="Address">@(user.Addresses.FirstOrDefault()?.road_name ?? "N/A")</td>
    <td data-filter="City">@(user.Addresses.FirstOrDefault()?.city ?? "N/A")</td>
    <td data-filter="State">@(user.Addresses.FirstOrDefault()?.state ?? "N/A")</td>
    <td data-filter="Zipcode">@(user.Addresses.FirstOrDefault()?.zip_code ?? "N/A")</td>
</tr>}
            </tbody>
        </table>
    </div> } @*if no user information is present*@ else
                {<p>No data available.</p>}
            </div>
            <div class="table-container">
                <table id="accountsTable" border="1">
                    <thead>
                        <tr>
                            <th>Account ID</th>
                            <th>User ID</th>
                            <th>Account Name</th>
                            <th>Account Type</th>
                            <th>Balance</th>
                            <th>Interest Rate</th>
                            <th>Last Activity</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        @*goes through each user*@
                        @foreach (var user in users)
                        {
                            //checks to see if an correct userid has been entered or sees if the user id has not been selected
                            if (!selectedUserId.HasValue || user.userid == selectedUserId)
                            {
                                //goes through each account a user has
                                foreach (var account in user.Accounts)
                                {
            <tr class="account-row" data-accountid="@account.account_id"
                data-userid="@account.userid"
                data-name="@account.account_name"
                data-desc="@account.account_desc"
                data-type="@account.account_type"
                data-balance="@account.balance"
                data-rate="@account.interest_rate">
                <td style="color:blue; cursor:pointer; text-decoration:underline;">@account.account_id</td>
                <td>@account.userid</td>
                <td>@account.account_name</td>
                <td>@account.account_type</td>
                <td>$@account.balance</td>
                <td>%@Math.Round(account.interest_rate ?? 0, 2)</td>
                <td>@account.account_activity</td>
                <td>@account.account_desc</td>
            </tr>}
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <footer></footer>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            let isEditMode = false;
            //toggleMode is used to switch between being able to create a new account for a user or edit an existing account
            //a user has
            $('#toggleMode').on('click', function () {
                isEditMode = !isEditMode;
                $('#accountIdField').toggle(isEditMode);
                $(this).text(isEditMode ? 'Create Account' : 'Edit Account');
            });
            //gets the data stored within each row and submits the information to create an new account
            $('.account-row').on('click', function () {
                $('#account_id').val($(this).data('accountid'));
                $('#userid').val($(this).data('userid'));
                $('#account_name').val($(this).data('name'));
                $('#account_desc').val($(this).data('desc'));
                $('#balance').val($(this).data('balance'));
                $('#interest_rate').val($(this).data('rate'));
                $('#account_type').val($(this).data('type'));
                if (!isEditMode) $('#toggleMode').click();
                window.scrollTo({ top: 0, behavior: 'smooth' });
            });
            //deletes an selected account
            $('#deleteAccountBtn').on('click', function () {
                if (!isEditMode) return;
                const accountId = $('#account_id').val();
                if (accountId && confirm('Are you sure you want to delete this account and all its transactions?')) {
                    window.location.href = `/Bank/DeleteAccount?accountId=${accountId}`;
                }
            });
            //searchText is used to filter the displayed results from the user table
            $('#searchText').on('input', function () {
                let query = $(this).val().toLowerCase();
                let filter = $('#searchFilter').val();

                $("#bankTable tbody tr").each(function () {
                    let row = $(this);
                    if (filter) {
                        let column = row.find(`td[data-filter='${filter}']`).text().toLowerCase();
                        row.toggle(column.includes(query));
                    } else {
                        let fullText = row.text().toLowerCase();
                        row.toggle(fullText.includes(query));
                    }
                });
            });
        });
    </script>
</body>
</html>